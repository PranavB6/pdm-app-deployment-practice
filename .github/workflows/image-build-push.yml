name: "Image CI"
on:
  push:
    branches:
      - main

jobs:
  build-push:
    name: Build and Push Image
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write # Needed for Workload Identity Federation

    env:
      DOCKERHUB_IMAGE_NAME: pranav-app
      GCP_ARTIFACT_REGISTRY_IMAGE_NAME: pranav-app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_IMAGE_NAME }}
            ${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY_REPOSITORY_NAME }}/${{ env.GCP_ARTIFACT_REGISTRY_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy
        run: |
          # Get the last tag from the list of tags
          IMAGE=$(echo '${{ steps.meta.outputs.tags }}' | tail -n 1)
          echo "$IMAGE"

          cd deploy

          gcloud deply releases create release-${{ github.sha }} \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --region=${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }} \
            --delivery-pipeline="cloud-run-pipeline" \
            --images="image=${IMAGE}"
